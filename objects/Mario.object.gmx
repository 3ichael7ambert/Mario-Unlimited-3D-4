<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Mario0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>shadow</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //object declared variables
    //x,y movements
    facing_direction = 0;  
    speed_max = 2; //object speed
    
    //run/walk animation
    anim_speed = 0.5;  //animation speed. ex. image speed, 1 = faster, 0 slower    
    anim_number = 4; //number of animations - 1
    anim_index = 0; //variable for animation
    //temporary use
    anim_temp = 1;
    anim_temp1 = 0;
    
    //z axis movements for jump
    jump_power = 8;
    z_gravity = 0.6;
    z_limit = 0;    //ground limit
    z_floor = 0;    //ground floor
    z = 0;          //current z position
    z_jump = 0;     //jump variable
    //z collision values
    height = -52; //mario's height in pixels
    depth = -y*10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    depth = -y*10;

    if(x != xprevious || y != yprevious) //if there is a movement
    {
        //facing direction animation
        facing_direction = point_direction(xprevious,yprevious,x,y);
        
        //moving animation
        anim_index = round(anim_temp1);
        anim_temp1 += anim_temp;
        if(anim_temp1 &gt;= 4)
        {
            anim_temp = -1*anim_speed; //descending animation
        }
        else if(anim_temp1 &lt;= 0)
        {
            anim_temp = 1*anim_speed;  //ascending animation
        }
    }
    else
    {
      anim_index = 2; //idle stance  
    }
    
    //z gravity part
    z_jump += z_gravity;
    z += z_jump;
    
    if ( z &gt;= z_floor ) 
    {
        z = z_floor;
        z_jump = 0;
    }
    else    //if a jump occurs
    {
        if( z_jump &gt; 0 ) anim_index = anim_number + 2;
        else if ( z_jump &lt; 0 ) anim_index = anim_number + 1;
    }
    
    z_floor = z_limit;
    
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objCrazyBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //collision detection on z plane
    if ( ( z &lt; other.z &amp;&amp; other.height+other.z &lt; z ) 
         || ( z+height &lt; other.z &amp;&amp; z &gt; other.height+other.z ) )
    { 
        x = xprevious;
        y = yprevious;
        if(instance_place(x,y,block2) == other.id)  //when hit block uderneath
        {
            z_jump = 0;
            z = other.z-height;
        }
    }
    else 
    {
        if( z &lt; other.height+other.z ) //when on top of block
        {
            if( y &lt; other.y ) depth = other.depth - (other.y - y); //for depth on top of object in z plane
            z_floor = other.height+other.z-1;
        }
    }
    
    if( z+height+2 &gt; other.z) //just below the block, space underneath
    {
        if( y &gt; other.y ) depth = other.depth + (other.y+y);
        //just do nothing, let mario pass underneath
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBlock2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //collision detection on z plane
    if ( ( z &lt; other.z &amp;&amp; other.height+other.z &lt; z ) 
         || ( z+height &lt; other.z &amp;&amp; z &gt; other.height+other.z ) )
    { 
        x = xprevious;
        y = yprevious;
        if(instance_place(x,y,block2) == other.id)  //when hit block uderneath
        {
            z_jump = 0;
            z = other.z-height;
        }
    }
    else 
    {
        if( z &lt; other.height+other.z ) //when on top of block
        {
            if( y &lt; other.y ) depth = other.depth - (other.y - y); //for depth on top of object in z plane
            z_floor = other.height+other.z-1;
        }
    }
    
    if( z+height+2 &gt; other.z) //just below the block, space underneath
    {
        if( y &gt; other.y ) depth = other.depth + (other.y+y);
        //just do nothing, let mario pass underneath
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //collision detection on z plane
    if ( ( z &lt; other.z &amp;&amp; other.height+other.z &lt; z ) 
         || ( z+height &lt; other.z &amp;&amp; z &gt; other.height+other.z ) )
    { 
        x = xprevious;
        y = yprevious;
        if(instance_place(x,y,block2) == other.id)  //when hit block uderneath
        {
            z_jump = 0;
            z = other.z-height;
        }
    }
    else 
    {
        if( z &lt; other.height+other.z ) //when on top of block
        {
            if( y &lt; other.y ) depth = other.depth - (other.y - y); //for depth on top of object in z plane
            z_floor = other.height+other.z-1;
        }
    }
    
    if( z+height+2 &gt; other.z) //just below the block, space underneath
    {
        if( y &gt; other.y ) depth = other.depth + (other.y+y);
        //just do nothing, let mario pass underneath
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="block2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //collision detection on z plane
    if ( ( z &lt; other.z &amp;&amp; other.height+other.z &lt; z ) 
         || ( z+height &lt; other.z &amp;&amp; z &gt; other.height+other.z ) )
    { 
        x = xprevious;
        y = yprevious;
        if(instance_place(x,y,block2) == other.id)  //when hit block uderneath
        {
            z_jump = 0;
            z = other.z-height;
        }
    }
    else 
    {
        if( z &lt; other.height+other.z ) //when on top of block
        {
            if( y &lt; other.y ) depth = other.depth - (other.y - y); //for depth on top of object in z plane
            z_floor = other.height+other.z-1;
        }
    }
    
    if( z+height+2 &gt; other.z) //just below the block, space underneath
    {
        if( y &gt; other.y ) depth = other.depth + (other.y+y);
        //just do nothing, let mario pass underneath
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //collision detection on z plane
    if ( ( z &lt; other.z &amp;&amp; other.height+other.z &lt; z ) 
         || ( z+height &lt; other.z &amp;&amp; z &gt; other.height+other.z ) )
    { 
        x1 = 0;
        y1 = 0;
        x = xprevious;
        y = yprevious;
        if(instance_place(x,y,block2) == other.id)  //when hit block uderneath
        {
            z_jump = 0;
        }
    }
    else 
    {
        if( z &lt; other.height+other.z ) //when on top of block
        {
            if( y &lt; other.y ) depth = other.depth - (other.y - y); //for depth on top of object in z plane
            z_floor = other.height+other.z-1;
        }
        else if( z &gt; other.z) //just below the block, space underneath
        {
            if( y &gt; other.y ) depth = other.depth + (other.y+y);
            //just do nothing, let mario pass underneath
        }
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>109</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_to</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>speed_max</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>109</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_to</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>speed_max</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>109</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_to</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-speed_max</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>109</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_to</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-speed_max</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>109</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_to</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>xprevious</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>yprevious</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if ( z &lt; z_floor ) draw_sprite(shadow,-1,x,y+z_floor); //mario shadow
    draw_sprite(Mario0,(8*anim_index)+(facing_direction/45),x,(y+z));
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if( z &gt;= z_floor ) z_jump = -jump_power;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,82</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>
